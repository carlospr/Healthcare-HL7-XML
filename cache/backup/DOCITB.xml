<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//Arbortext//DTD DocBook XML V4.0//EN"
"C:\InterSystems\E2014\CSP\docbook\doctypes\docbook\docbookx.dtd">
<book id="DOCITB" arch="intersystems" remap="999_999_DOCITB">
<title>ITB - InterSystems Tool Box</title>
<subtitle>Describes what is ITB package and how it can be used.</subtitle>

<chapter id="DOCITB_intro">
	<title>Introduction</title>
	<sect1 id="DOCITB_intro_whatis">
		<title>What is ITB?</title>
		<para><emphasis>ITB - InterSystems Tool Box</emphasis> is a package of Ensemble classes with some useful tools that:</para>
		<itemizedlist>
			<listitem><para>Allow handling of <emphasis>HL7 v.2.x messages in XML format</emphasis> (among other features).</para></listitem>
			<listitem><para>Must be installed in a Ensemble instance.</para></listitem>
			<listitem><para>Can be reused in different Ensemble integrations.</para></listitem>
		</itemizedlist>
	</sect1>	
</chapter>


<chapter id="DOCITB_feat">
	<title>Features</title>
	<sect1 id="DOCITB_feat_hl7xml">
		<title>HL7 v2.x in XML format</title>
		
		<sect2 id="DOCITB_feat_hl7xml_bsbo">
			<title>Services and Operations</title>
			<para>ITB includes services and operations to handle HL7 v2.x in XML format:</para>
			<itemizedlist>
				<listitem><para>Business Services - receive HL7 XML messages from external applications and send an <classname>EnsLib.HL7.Message</classname> to production.</para></listitem>
				<listitem><para>Business Operations - receive an <classname>EnsLib.HL7.Message</classname> from production and send HL7 XML messages to external applications.</para></listitem>
			</itemizedlist>
			<para>
				<graphic fileref="images/itb_hl7xml.jpg" width="5.5in"/>
			</para>
			<para>Both services and operations includes the most common HL7 production component settings such as: Message Schema Category, SearchTable, ACKMode, etc.</para>
		</sect2>
		
		<sect2 id="DOCITB_feat_hl7xml_lookup">
			<title>Lookup tables</title>
			<para>Lookup tables are used to map HL7 XML group names and <classname>EnsLib.HL7.Message</classname> group names:</para>
			<itemizedlist>
				<listitem><para>ITB installation includes a lookup table for HL7 2.5 schema called <emphasis>hl7_2.5</emphasis>.</para></listitem>
				<listitem><para>Each HL7 schema used in XML format must include a lookup table with the name <emphasis>hl7_[schema]</emphasis>.</para></listitem>
				<listitem><para>For instance: if a custom HL7 schema called CUSTOM is used in XML format in a production, a <emphasis>hl7_CUSTOM</emphasis> lookup table must be creatd.</para></listitem>
			</itemizedlist>
		</sect2>
		
		<sect2 id="DOCITB_feat_hl7xml_ds">
			<title>Segment fields with dynamic data structures</title>
			<para>A segment field that has a dynamic data structure can be defined using a custom HL7 schema.</para>
			<para>For instance: if it's needed to have an OBX.5 field with a data structured defined by OBX.2 field:</para>
			<orderedlist>
				<listitem><para>Create a new HL7 schema copying <filename>2.5.HL7</filename> in Studio.</para></listitem>
				<listitem>
					<para>Mark the new HL7 schema as standard with <emphasis>std=1</emphasis> to allow non-resolved data structure references.</para>
					<programlisting>
&lt;Category name="CUSTOM" std="1"&gt;
					</programlisting>
				</listitem>
				<listitem>
					<para>Find OBX segment structure definition and change field 5 datatype to <emphasis>@2</emphasis> that means that it will take the datatype defined in OBX.2.</para>
					<programlisting>
&lt;SegmentSubStructure piece='5' description='Observation Value' datatype='@2' symbol='&amp;' required='C' ifrepeating='1'/&gt;
					</programlisting>
				</listitem>
			</orderedlist>
		</sect2>
		
		<sect2 id="DOCITB_feat_hl7xml_prod">
			<title>Test Ensemble Productions</title>
			<para>Test Ensemble productions are included in ITB to allow the developer testing the different HL7 XML components. Some of the most useful are the following:</para>
			<informaltable frame="all">
				<tgroup cols="3">
					<colspec colnum="1" colname="Prod" />
					<colspec colnum="2" colname="Descrip" />
					<thead>
					  <row>
						<entry colname="Prod">Production</entry>
						<entry colname="Descrip">Description</entry>
					  </row>
					</thead>
					<tbody>
					  <row>
						<entry>ITB.Production.TestXMLHL7File</entry>
						<entry>
							<para>Reads HL7 XML file, converts to EnsLib.HL7.Message and writes an HL7 ER7 files.</para>
							<para>Reads HL7 ER7 file, converts to EnsLib.HL7.Message and writes an HL7 XML files.</para>
							<note><para>It's recommended to have this production working correctly before trying more complex scenarios.</para></note>
						</entry>
					  </row>
					  <row>
						<entry>ITB.Production.TestXMLHL7SOAP</entry>
						<entry>Shows how to use a WebService (Business Service) that receives an HL7 XML message as an incoming string.</entry>
					  </row>
					</tbody>
				  </tgroup>
			</informaltable>
		</sect2>
	</sect1>	
</chapter>	

	
<chapter id="DOCITB_install">
	<title>Installation/Upgrade</title>
	<sect1 id="DOCITB_install_unzip">
		<title>Unzip installation files</title>
		<para>Unzip installation file <filename>ITB_1.9_2014.zip</filename> in a temporary directory (e.g. <filename>C:\Temp\</filename>).</para>
	</sect1>
	<sect1 id="DOCITB_install_installer">
		<title>Load installer</title>
		<orderedlist>
			<listitem><para>Open an Ensemble Terminal session.</para></listitem>
			<listitem>
				<para>In the Terminal session change to your namespace (e.g. ENSEMBLE) and load the installer.</para>
				<programlisting>
USER>zn "ENSEMBLE"
 
ENSEMBLE>do $system.OBJ.Load("C:\Temp\ITB_1.9_2014\cls\ITB\Installer.xml","c")
 
Load started on 10/30/2015 10:59:33
Loading file C:\Temp\ITB_1.9_2014\cls\ITB\Installer.xml as xml
Imported class: ITB.Installer
Compiling class ITB.Installer
Compiling routine ITB.Installer.1
Load finished successfully.
				</programlisting>
			</listitem>
		</orderedlist>
	</sect1>
	<sect1 id="DOCITB_install_run">
		<title>Run installer</title>
		<para>Call the <emphasis>Run</emphasis> method of the installer from the Terminal session specifying the temporary directory where install files were unzipped.</para>
		<programlisting>
ENSEMBLE>do ##class(ITB.Installer).Run("C:\Temp\ITB_1.9_2014\")
[2015-10-30 10:59:54] ITB Installer started
[2015-10-30 10:59:54] Install Files started
[2015-10-30 10:59:54] __Importing includes...done
[2015-10-30 10:59:54] __Importing classes...done
[2015-10-30 11:00:14] __Importing hl7 schema...done
[2015-10-30 11:00:20] __Importing lookup tables...done
[2015-10-30 11:00:21] __Importing documentation:
Loading: C:\temp\ITB_1.9_2014\backup\DOCITB.xml
[2015-10-30 11:00:25] __Importing translations:
[2015-10-30 11:00:25] Install Files ended
[2015-10-30 11:00:25] ITB Checking started
[2015-10-30 11:00:25] __ITB.Info.VERSION=1.9
[2015-10-30 11:00:25] ITB Checking ended
[2015-10-30 11:00:25] ITB UnitTest
===============================================================================
Directory: C:\temp\ITB_1.9_2014\cls\ITB\UnitTest\
===============================================================================
cls\ITB\UnitTest begins ...
Load of directory started on 10/30/2015 11:00:25 '*.xml;*.XML'
 
 
Loading file C:\temp\ITB_1.9_2014\cls\ITB\UnitTest\HL7XML.xml as xml
Imported class: ITB.UnitTest.HL7XML
 
 
Compilation started on 10/30/2015 11:00:25 with qualifiers 'ck/nodisplay/display=log/display=error'
Compiling class ITB.UnitTest.HL7XML
Compiling routine ITB.UnitTest.HL7XML.1
Compilation finished successfully in 0.029s.
 
Load finished successfully.
 
  ITB.UnitTest.HL7XML begins ...
    TestBigField() begins ...
      AssertEquals:generated big stream of 6250 KB (passed)
      AssertStatusOK:er7->xml (passed)
      AssertStatusOK:xml->er7 (passed)
      AssertEquals:big stream with same size (passed)
      LogMessage:Duration of execution: 1.461376 sec.
    TestBigField passed
    TestER7ToXML() begins ...
      AssertStatusOK:Looping over *.hl7 files in C:\temp\ITB_1.9_2014\backup/hl7\ (passed)
      AssertEquals:2.5_OBX5-ST.hl7: reference HL7 XML file exists (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7: import er7 file (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7: doctype=2.5:ORM_O01 (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7: ER7ToXML (passed)
      AssertEquals:2.5_OBX5-ST.hl7: XML conversion (passed)
      AssertEquals:2.5_ORMO01.hl7: reference HL7 XML file exists (passed)
      AssertStatusOK:2.5_ORMO01.hl7: import er7 file (passed)
      AssertStatusOK:2.5_ORMO01.hl7: doctype=2.5:ORM_O01 (passed)
      AssertStatusOK:2.5_ORMO01.hl7: ER7ToXML (passed)
      AssertEquals:2.5_ORMO01.hl7: XML conversion (passed)
      AssertEquals:ITB_ADTA01-EscapeField.hl7: reference HL7 XML file exists (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7: import er7 file (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7: doctype=ITB:ADT_A01 (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7: ER7ToXML (passed)
      AssertEquals:ITB_ADTA01-EscapeField.hl7: XML conversion (passed)
      AssertEquals:ITB_OBX5.hl7: reference HL7 XML file exists (passed)
      AssertStatusOK:ITB_OBX5.hl7: import er7 file (passed)
      AssertStatusOK:ITB_OBX5.hl7: doctype=ITB:ORM_O01 (passed)
      AssertStatusOK:ITB_OBX5.hl7: ER7ToXML (passed)
      AssertEquals:ITB_OBX5.hl7: XML conversion (passed)
      AssertEquals:ITB_ORUR01-FT.hl7: reference HL7 XML file exists (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7: import er7 file (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7: doctype=ITB:ORU_R01 (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7: ER7ToXML (passed)
      AssertEquals:ITB_ORUR01-FT.hl7: XML conversion (passed)
      LogMessage:Duration of execution: .808882 sec.
    TestER7ToXML passed
    TestXMLToER7() begins ...
      AssertStatusOK:Looping over *.hl7.xml files in C:\temp\ITB_1.9_2014\backup/hl7\ (passed)
      AssertEquals:2.5_OBX5-ST.hl7.xml: reference HL7 ER7 file exists (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7.xml: import er7 file (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7.xml: doctype=2.5:ORM_O01 (passed)
      AssertStatusOK:2.5_OBX5-ST.hl7.xml: XMLToER7 (passed)
      AssertEquals:2.5_OBX5-ST.hl7.xml: ER7 conversion (passed)
      AssertEquals:2.5_ORMO01.hl7.xml: reference HL7 ER7 file exists (passed)
      AssertStatusOK:2.5_ORMO01.hl7.xml: import er7 file (passed)
      AssertStatusOK:2.5_ORMO01.hl7.xml: doctype=2.5:ORM_O01 (passed)
      AssertStatusOK:2.5_ORMO01.hl7.xml: XMLToER7 (passed)
      AssertEquals:2.5_ORMO01.hl7.xml: ER7 conversion (passed)
      AssertEquals:ITB_ADTA01-EscapeField.hl7.xml: reference HL7 ER7 file exists (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7.xml: import er7 file (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7.xml: doctype=ITB:ADT_A01 (passed)
      AssertStatusOK:ITB_ADTA01-EscapeField.hl7.xml: XMLToER7 (passed)
      AssertEquals:ITB_ADTA01-EscapeField.hl7.xml: ER7 conversion (passed)
      AssertEquals:ITB_OBX5.hl7.xml: reference HL7 ER7 file exists (passed)
      AssertStatusOK:ITB_OBX5.hl7.xml: import er7 file (passed)
      AssertStatusOK:ITB_OBX5.hl7.xml: doctype=ITB:ORM_O01 (passed)
      AssertStatusOK:ITB_OBX5.hl7.xml: XMLToER7 (passed)
      AssertEquals:ITB_OBX5.hl7.xml: ER7 conversion (passed)
      AssertEquals:ITB_ORUR01-FT.hl7.xml: reference HL7 ER7 file exists (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7.xml: import er7 file (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7.xml: doctype=ITB:ORU_R01 (passed)
      AssertStatusOK:ITB_ORUR01-FT.hl7.xml: XMLToER7 (passed)
      AssertEquals:ITB_ORUR01-FT.hl7.xml: ER7 conversion (passed)
      LogMessage:Duration of execution: .138039 sec.
    TestXMLToER7 passed
  ITB.UnitTest.HL7XML passed
cls\ITB\UnitTest passed
 
Use the following URL to view the result:
http://172.17.62.30:57773/csp/ensemble/%25UnitTest.Portal.Indices.cls?Index=2
[2015-10-30 11:00:27] ITB UnitTest ended
[2015-10-30 11:00:27] ITB Installer ended
[2015-10-30 11:00:27] Status=OK
		</programlisting>
	</sect1>
</chapter>

</book>